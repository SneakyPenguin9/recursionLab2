//Bass, Brett Th
#include <iostream>
#include <string>

using namespace std;

double pow(int base, int power);
void sumSquaresDec(int num, int &result);
void sumSquaresInc(int num);
int inputCheck(const string& fOutput);

int main() {
	int base, power, input, result;
	do {
		cout << " 1:Exponent operator." << endl
			<< " 2:Square sum increasing." << endl
			<< " 3:Square sum decreasing." << endl
			<< " 4:Exit Program." << endl;
		cin >> input;
		switch (input) {

		case 1: //exponent
			cout << "base: ";
			cin >> base;
			cout << "exponent: ";
			cin >> power;
			cout << "result: " << pow(base, power) << endl;
			break;

		case 2: //increasing
			base = inputCheck("sum of squares: ");
			result = 0;
			sumSquaresDec(base, result); cout << "=" << result << endl;
			break;
		case 3: //decreasing
			base = inputCheck("sum of squares: ");
			sumSquaresInc(base); cout << endl;
			break;
		case 4:
			exit(EXIT_SUCCESS);
			break;
		default: //input check
			cout << "Invalid option" << endl;
		}

	} while (input != 4);
}

double pow(int base, int power) {
	if (power == 0) return 1;
	else if (power > 0) {
		if (power == 1) return base;
		else return base * pow(base, power - 1);
	}
	else {
		if (power == -1) return 1.0 / base;
		else return 1.0 / base * pow(base, power + 1);
	}
}

void sumSquaresDec(int num, int &result) {
	if (num == 0) return;
	if (num == 1) {
		result++;
		cout << "1";
	}
	else {
		result += num * num;
		sumSquaresDec(num - 1, result);
		cout << "+(" << num << "*" << num << ")";
	}
}

void sumSquaresInc(int num) {
	static int s = 0;
	if (num == 0) return;
	if (num == 1) {
		s++;
		cout << "1=" << s;
	}
	else {
		s += num * num;
		cout << "(" << num << "*" << num << ")+";
		sumSquaresInc(num - 1);
	}
}

int inputCheck(const string& fOutput) {
	int input;
	bool badInput;
	do {
		badInput = false;
		cout << fOutput;
		cin >> input;
		if (!cin || input < 0) {
			cout << "bad input." << endl;
			cin.clear();
			cin.ignore(255, '\n');
			badInput = true;
		}
	} while (badInput);
	return input;
}
